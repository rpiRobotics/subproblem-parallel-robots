function [Q, is_LS_vec, is_LS_mat, diag_mat] = IK_comp(obj, R_06, p_0T, q4_given)
arguments
    obj
    R_06
    p_0T
    q4_given = NaN
end
% Similar to IK_spherical_2_parallel

kin = obj.kin;
p_06 = p_0T-R_06*kin.P(:,7)-kin.P(:,1);

Q = [];
is_LS_vec = [];
is_LS_mat = [];
diag_mat = {};

% Use subproblem 4 to find up to two solutions for q1
[t1, q1_is_LS, q1_diag] = subproblem_comp.sp_4( ...
    kin.H(:,2), ...
    p_06, ...
    -kin.H(:,1), ...
    kin.H(:,2)'*(kin.P(:,2)+kin.P(:,3)+kin.P(:,4)));

% Use subproblem 3 to find up to two solutions for q3
for i_q1 = 1:length(t1)
    q1 = t1(i_q1);
    [t3, q3_is_LS, q3_diag] = subproblem_comp.sp_3( ...
        -kin.P(:,4), ...
        kin.P(:,3), ...
        kin.H(:,3), ...
        norm( ...
            rot(-kin.H(:,1), q1)*(-p_06) + kin.P(:,2) ...
            ) ...
        );
    % Solve for q2 using subproblem 1
    for i_q3 = 1:length(t3)
        q3 = t3(i_q3);
        [q2, q2_is_LS, q2_diag] = subproblem_comp.sp_1( ...
            -kin.P(:,3) - rot(kin.H(:,3), q3)*kin.P(:,4), ...
            rot(-kin.H(:,1), q1)*(-p_06) + kin.P(:,2), ...
            kin.H(:,2));

        R_36 = rot(-kin.H(:,3), q3)*...
               rot(-kin.H(:,2), q2)*...
               rot(-kin.H(:,1), q1)*R_06;
        % Solve for q5 using subproblem 4
        [t5, q5_is_LS, q5_diag] = subproblem_comp.sp_4( ...
            kin.H(:,4), ...
            kin.H(:,6), ...
            kin.H(:,5), ...
            kin.H(:,4)'*R_36*kin.H(:,6));
        
        % Solve for q4 using subproblem 1
        for i_q5 = 1:length(t5)
            q5 = t5(i_q5);
            [q4, q4_is_LS, q4_diag] = subproblem_comp.sp_1( ...
                rot(kin.H(:,5), q5)*kin.H(:,6), ...
                R_36*kin.H(:,6), ...
                kin.H(:,4), q4_given);
            % Solve for q6 using subproblem 1
            % Solve in terms of q4 for internal singularity resolution
            [q6, q6_is_LS, q6_diag] = subproblem_comp.sp_1( ...
                kin.H(:,5), ...
                R_36'*rot(kin.H(:,4),q4)*kin.H(:,5), ...
                -kin.H(:,6));
            q_i = [q1 q2 q3 q4 q5 q6]';
            Q = [Q q_i];
            is_LS_vec = [is_LS_vec q1_is_LS||q2_is_LS||q3_is_LS||q4_is_LS||q5_is_LS||q6_is_LS];
            is_LS_mat = [is_LS_mat [q1_is_LS q2_is_LS q3_is_LS q4_is_LS q5_is_LS q6_is_LS]'];
            diag_mat(:,end+1) = {q1_diag; q2_diag; q3_diag; q4_diag; q5_diag; q6_diag};
        end
    end
end

end