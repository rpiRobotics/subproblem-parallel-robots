% Solve the 8th order subproblem defined by the following pair of equations
% || R_1 p_1 - R_2 p_2 || = d_1
% || R_1 p_3 - R_2 p_4 || = d_2
function [theta_1, theta_2] = two_spheres(p1, p2, p3, p4, k1, k2, d1, d2);
    p11 = p1(1); p12 = p1(2); p13 = p1(3);
    p21 = p2(1); p22 = p2(2); p23 = p2(3);
    p31 = p3(1); p32 = p3(2); p33 = p3(3);
    p41 = p4(1); p42 = p4(2); p43 = p4(3);
    k11 = k1(1); k12 = k1(2); k13 = k1(3);
    k21 = k2(1); k22 = k2(2); k23 = k2(3);
    Pa = NaN([1 3]); Pb = NaN([1 3]); Pc = NaN([1 3]);
    Qa = NaN([1 3]); Qb = NaN([1 3]); Qc = NaN([1 3]);

    % These coefficients were generated by generate_two_spheres.m
    Pa(1) = - d1^2 - 2*k11^2*k21^2*p11*p21 - 2*k11^2*k21^2*p12*p22 - 2*k11^2*k21^2*p13*p23 - 4*k11^2*k21*k22*p11*p22 + 4*k11^2*k21*k22*p12*p21 - 4*k11^2*k21*k23*p11*p23 + 4*k11^2*k21*k23*p13*p21 + 2*k11^2*k22^2*p11*p21 + 2*k11^2*k22^2*p12*p22 - 2*k11^2*k22^2*p13*p23 + 4*k11^2*k22*k23*p12*p23 + 4*k11^2*k22*k23*p13*p22 + 2*k11^2*k23^2*p11*p21 - 2*k11^2*k23^2*p12*p22 + 2*k11^2*k23^2*p13*p23 + 4*k11*k12*k21^2*p11*p22 - 4*k11*k12*k21^2*p12*p21 - 8*k11*k12*k21*k22*p11*p21 - 8*k11*k12*k21*k22*p12*p22 - 8*k11*k12*k21*k23*p12*p23 - 4*k11*k12*k22^2*p11*p22 + 4*k11*k12*k22^2*p12*p21 - 8*k11*k12*k22*k23*p11*p23 + 4*k11*k12*k23^2*p11*p22 + 4*k11*k12*k23^2*p12*p21 + 4*k11*k13*k21^2*p11*p23 - 4*k11*k13*k21^2*p13*p21 - 8*k11*k13*k21*k22*p13*p22 - 8*k11*k13*k21*k23*p11*p21 - 8*k11*k13*k21*k23*p13*p23 + 4*k11*k13*k22^2*p11*p23 + 4*k11*k13*k22^2*p13*p21 - 8*k11*k13*k22*k23*p11*p22 - 4*k11*k13*k23^2*p11*p23 + 4*k11*k13*k23^2*p13*p21 + 2*k12^2*k21^2*p11*p21 + 2*k12^2*k21^2*p12*p22 - 2*k12^2*k21^2*p13*p23 + 4*k12^2*k21*k22*p11*p22 - 4*k12^2*k21*k22*p12*p21 + 4*k12^2*k21*k23*p11*p23 + 4*k12^2*k21*k23*p13*p21 - 2*k12^2*k22^2*p11*p21 - 2*k12^2*k22^2*p12*p22 - 2*k12^2*k22^2*p13*p23 - 4*k12^2*k22*k23*p12*p23 + 4*k12^2*k22*k23*p13*p22 - 2*k12^2*k23^2*p11*p21 + 2*k12^2*k23^2*p12*p22 + 2*k12^2*k23^2*p13*p23 + 4*k12*k13*k21^2*p12*p23 + 4*k12*k13*k21^2*p13*p22 - 8*k12*k13*k21*k22*p13*p21 - 8*k12*k13*k21*k23*p12*p21 + 4*k12*k13*k22^2*p12*p23 - 4*k12*k13*k22^2*p13*p22 - 8*k12*k13*k22*k23*p12*p22 - 8*k12*k13*k22*k23*p13*p23 - 4*k12*k13*k23^2*p12*p23 + 4*k12*k13*k23^2*p13*p22 + 2*k13^2*k21^2*p11*p21 - 2*k13^2*k21^2*p12*p22 + 2*k13^2*k21^2*p13*p23 + 4*k13^2*k21*k22*p11*p22 + 4*k13^2*k21*k22*p12*p21 + 4*k13^2*k21*k23*p11*p23 - 4*k13^2*k21*k23*p13*p21 - 2*k13^2*k22^2*p11*p21 + 2*k13^2*k22^2*p12*p22 + 2*k13^2*k22^2*p13*p23 + 4*k13^2*k22*k23*p12*p23 - 4*k13^2*k22*k23*p13*p22 - 2*k13^2*k23^2*p11*p21 - 2*k13^2*k23^2*p12*p22 - 2*k13^2*k23^2*p13*p23 + p11^2 + p12^2 + p13^2 + p21^2 + p22^2 + p23^2;
    Pa(2) = 4*k11*k21^2*p12*p23 - 4*k11*k21^2*p13*p22 - 4*k12*k21^2*p11*p23 - 4*k12*k21^2*p13*p21 + 4*k13*k21^2*p11*p22 + 4*k13*k21^2*p12*p21 + 4*k11*k22^2*p12*p23 + 4*k11*k22^2*p13*p22 - 4*k12*k22^2*p11*p23 + 4*k12*k22^2*p13*p21 - 4*k13*k22^2*p11*p22 - 4*k13*k22^2*p12*p21 - 4*k11*k23^2*p12*p23 - 4*k11*k23^2*p13*p22 + 4*k12*k23^2*p11*p23 + 4*k12*k23^2*p13*p21 + 4*k13*k23^2*p11*p22 - 4*k13*k23^2*p12*p21 + 8*k11*k21*k22*p13*p21 - 8*k11*k21*k23*p12*p21 + 8*k12*k21*k23*p11*p21 - 8*k13*k21*k22*p11*p21 - 8*k11*k22*k23*p12*p22 - 8*k12*k21*k22*p13*p22 + 8*k12*k22*k23*p11*p22 + 8*k13*k21*k22*p12*p22 + 8*k11*k22*k23*p13*p23 - 8*k12*k21*k23*p13*p23 + 8*k13*k21*k23*p12*p23 - 8*k13*k22*k23*p11*p23;
    Pa(3) = - d1^2 - 2*k11^2*k21^2*p11*p21 + 2*k11^2*k21^2*p12*p22 + 2*k11^2*k21^2*p13*p23 - 4*k11^2*k21*k22*p11*p22 - 4*k11^2*k21*k22*p12*p21 - 4*k11^2*k21*k23*p11*p23 - 4*k11^2*k21*k23*p13*p21 + 2*k11^2*k22^2*p11*p21 - 2*k11^2*k22^2*p12*p22 + 2*k11^2*k22^2*p13*p23 - 4*k11^2*k22*k23*p12*p23 - 4*k11^2*k22*k23*p13*p22 + 2*k11^2*k23^2*p11*p21 + 2*k11^2*k23^2*p12*p22 - 2*k11^2*k23^2*p13*p23 - 2*k12^2*k21^2*p11*p21 + 2*k12^2*k21^2*p12*p22 + 2*k12^2*k21^2*p13*p23 - 4*k12^2*k21*k22*p11*p22 - 4*k12^2*k21*k22*p12*p21 - 4*k12^2*k21*k23*p11*p23 - 4*k12^2*k21*k23*p13*p21 + 2*k12^2*k22^2*p11*p21 - 2*k12^2*k22^2*p12*p22 + 2*k12^2*k22^2*p13*p23 - 4*k12^2*k22*k23*p12*p23 - 4*k12^2*k22*k23*p13*p22 + 2*k12^2*k23^2*p11*p21 + 2*k12^2*k23^2*p12*p22 - 2*k12^2*k23^2*p13*p23 - 2*k13^2*k21^2*p11*p21 + 2*k13^2*k21^2*p12*p22 + 2*k13^2*k21^2*p13*p23 - 4*k13^2*k21*k22*p11*p22 - 4*k13^2*k21*k22*p12*p21 - 4*k13^2*k21*k23*p11*p23 - 4*k13^2*k21*k23*p13*p21 + 2*k13^2*k22^2*p11*p21 - 2*k13^2*k22^2*p12*p22 + 2*k13^2*k22^2*p13*p23 - 4*k13^2*k22*k23*p12*p23 - 4*k13^2*k22*k23*p13*p22 + 2*k13^2*k23^2*p11*p21 + 2*k13^2*k23^2*p12*p22 - 2*k13^2*k23^2*p13*p23 + p11^2 + p12^2 + p13^2 + p21^2 + p22^2 + p23^2;
    
    Pb(1) = 4*k11^2*k21*p13*p22 - 4*k11^2*k21*p12*p23 - 4*k11^2*k22*p11*p23 - 4*k11^2*k22*p13*p21 + 4*k11^2*k23*p11*p22 + 4*k11^2*k23*p12*p21 + 4*k12^2*k21*p12*p23 + 4*k12^2*k21*p13*p22 + 4*k12^2*k22*p11*p23 - 4*k12^2*k22*p13*p21 - 4*k12^2*k23*p11*p22 - 4*k12^2*k23*p12*p21 - 4*k13^2*k21*p12*p23 - 4*k13^2*k21*p13*p22 + 4*k13^2*k22*p11*p23 + 4*k13^2*k22*p13*p21 - 4*k13^2*k23*p11*p22 + 4*k13^2*k23*p12*p21 + 8*k11*k12*k21*p11*p23 - 8*k11*k12*k23*p11*p21 - 8*k11*k13*k21*p11*p22 + 8*k11*k13*k22*p11*p21 - 8*k11*k12*k22*p12*p23 + 8*k11*k12*k23*p12*p22 - 8*k12*k13*k21*p12*p22 + 8*k12*k13*k22*p12*p21 - 8*k11*k13*k22*p13*p23 + 8*k11*k13*k23*p13*p22 + 8*k12*k13*k21*p13*p23 - 8*k12*k13*k23*p13*p21;
    Pb(2) = 8*k11*k22*p12*p21 - 8*k11*k21*p12*p22 + 8*k12*k21*p11*p22 - 8*k12*k22*p11*p21 - 8*k11*k21*p13*p23 + 8*k11*k23*p13*p21 + 8*k13*k21*p11*p23 - 8*k13*k23*p11*p21 - 8*k12*k22*p13*p23 + 8*k12*k23*p13*p22 + 8*k13*k22*p12*p23 - 8*k13*k23*p12*p22;
    Pb(3) = 4*k11^2*k21*p12*p23 - 4*k11^2*k21*p13*p22 - 4*k11^2*k22*p11*p23 + 4*k11^2*k22*p13*p21 + 4*k11^2*k23*p11*p22 - 4*k11^2*k23*p12*p21 + 4*k12^2*k21*p12*p23 - 4*k12^2*k21*p13*p22 - 4*k12^2*k22*p11*p23 + 4*k12^2*k22*p13*p21 + 4*k12^2*k23*p11*p22 - 4*k12^2*k23*p12*p21 + 4*k13^2*k21*p12*p23 - 4*k13^2*k21*p13*p22 - 4*k13^2*k22*p11*p23 + 4*k13^2*k22*p13*p21 + 4*k13^2*k23*p11*p22 - 4*k13^2*k23*p12*p21;

    Pc(1) = - d1^2 - 2*k11^2*k21^2*p11*p21 + 2*k11^2*k21^2*p12*p22 + 2*k11^2*k21^2*p13*p23 - 2*k11^2*k22^2*p11*p21 + 2*k11^2*k22^2*p12*p22 + 2*k11^2*k22^2*p13*p23 - 2*k11^2*k23^2*p11*p21 + 2*k11^2*k23^2*p12*p22 + 2*k11^2*k23^2*p13*p23 - 4*k11*k12*k21^2*p11*p22 - 4*k11*k12*k21^2*p12*p21 - 4*k11*k12*k22^2*p11*p22 - 4*k11*k12*k22^2*p12*p21 - 4*k11*k12*k23^2*p11*p22 - 4*k11*k12*k23^2*p12*p21 - 4*k11*k13*k21^2*p11*p23 - 4*k11*k13*k21^2*p13*p21 - 4*k11*k13*k22^2*p11*p23 - 4*k11*k13*k22^2*p13*p21 - 4*k11*k13*k23^2*p11*p23 - 4*k11*k13*k23^2*p13*p21 + 2*k12^2*k21^2*p11*p21 - 2*k12^2*k21^2*p12*p22 + 2*k12^2*k21^2*p13*p23 + 2*k12^2*k22^2*p11*p21 - 2*k12^2*k22^2*p12*p22 + 2*k12^2*k22^2*p13*p23 + 2*k12^2*k23^2*p11*p21 - 2*k12^2*k23^2*p12*p22 + 2*k12^2*k23^2*p13*p23 - 4*k12*k13*k21^2*p12*p23 - 4*k12*k13*k21^2*p13*p22 - 4*k12*k13*k22^2*p12*p23 - 4*k12*k13*k22^2*p13*p22 - 4*k12*k13*k23^2*p12*p23 - 4*k12*k13*k23^2*p13*p22 + 2*k13^2*k21^2*p11*p21 + 2*k13^2*k21^2*p12*p22 - 2*k13^2*k21^2*p13*p23 + 2*k13^2*k22^2*p11*p21 + 2*k13^2*k22^2*p12*p22 - 2*k13^2*k22^2*p13*p23 + 2*k13^2*k23^2*p11*p21 + 2*k13^2*k23^2*p12*p22 - 2*k13^2*k23^2*p13*p23 + p11^2 + p12^2 + p13^2 + p21^2 + p22^2 + p23^2;
    Pc(2) = 4*k11*k21^2*p13*p22 - 4*k11*k21^2*p12*p23 + 4*k12*k21^2*p11*p23 - 4*k12*k21^2*p13*p21 - 4*k13*k21^2*p11*p22 + 4*k13*k21^2*p12*p21 - 4*k11*k22^2*p12*p23 + 4*k11*k22^2*p13*p22 + 4*k12*k22^2*p11*p23 - 4*k12*k22^2*p13*p21 - 4*k13*k22^2*p11*p22 + 4*k13*k22^2*p12*p21 - 4*k11*k23^2*p12*p23 + 4*k11*k23^2*p13*p22 + 4*k12*k23^2*p11*p23 - 4*k12*k23^2*p13*p21 - 4*k13*k23^2*p11*p22 + 4*k13*k23^2*p12*p21;
    Pc(3) = - d1^2 - 2*k11^2*k21^2*p11*p21 - 2*k11^2*k21^2*p12*p22 - 2*k11^2*k21^2*p13*p23 - 2*k11^2*k22^2*p11*p21 - 2*k11^2*k22^2*p12*p22 - 2*k11^2*k22^2*p13*p23 - 2*k11^2*k23^2*p11*p21 - 2*k11^2*k23^2*p12*p22 - 2*k11^2*k23^2*p13*p23 - 2*k12^2*k21^2*p11*p21 - 2*k12^2*k21^2*p12*p22 - 2*k12^2*k21^2*p13*p23 - 2*k12^2*k22^2*p11*p21 - 2*k12^2*k22^2*p12*p22 - 2*k12^2*k22^2*p13*p23 - 2*k12^2*k23^2*p11*p21 - 2*k12^2*k23^2*p12*p22 - 2*k12^2*k23^2*p13*p23 - 2*k13^2*k21^2*p11*p21 - 2*k13^2*k21^2*p12*p22 - 2*k13^2*k21^2*p13*p23 - 2*k13^2*k22^2*p11*p21 - 2*k13^2*k22^2*p12*p22 - 2*k13^2*k22^2*p13*p23 - 2*k13^2*k23^2*p11*p21 - 2*k13^2*k23^2*p12*p22 - 2*k13^2*k23^2*p13*p23 + p11^2 + p12^2 + p13^2 + p21^2 + p22^2 + p23^2;

    Qa(1) = - d2^2 - 2*k11^2*k21^2*p31*p41 - 2*k11^2*k21^2*p32*p42 - 2*k11^2*k21^2*p33*p43 - 4*k11^2*k21*k22*p31*p42 + 4*k11^2*k21*k22*p32*p41 - 4*k11^2*k21*k23*p31*p43 + 4*k11^2*k21*k23*p33*p41 + 2*k11^2*k22^2*p31*p41 + 2*k11^2*k22^2*p32*p42 - 2*k11^2*k22^2*p33*p43 + 4*k11^2*k22*k23*p32*p43 + 4*k11^2*k22*k23*p33*p42 + 2*k11^2*k23^2*p31*p41 - 2*k11^2*k23^2*p32*p42 + 2*k11^2*k23^2*p33*p43 + 4*k11*k12*k21^2*p31*p42 - 4*k11*k12*k21^2*p32*p41 - 8*k11*k12*k21*k22*p31*p41 - 8*k11*k12*k21*k22*p32*p42 - 8*k11*k12*k21*k23*p32*p43 - 4*k11*k12*k22^2*p31*p42 + 4*k11*k12*k22^2*p32*p41 - 8*k11*k12*k22*k23*p31*p43 + 4*k11*k12*k23^2*p31*p42 + 4*k11*k12*k23^2*p32*p41 + 4*k11*k13*k21^2*p31*p43 - 4*k11*k13*k21^2*p33*p41 - 8*k11*k13*k21*k22*p33*p42 - 8*k11*k13*k21*k23*p31*p41 - 8*k11*k13*k21*k23*p33*p43 + 4*k11*k13*k22^2*p31*p43 + 4*k11*k13*k22^2*p33*p41 - 8*k11*k13*k22*k23*p31*p42 - 4*k11*k13*k23^2*p31*p43 + 4*k11*k13*k23^2*p33*p41 + 2*k12^2*k21^2*p31*p41 + 2*k12^2*k21^2*p32*p42 - 2*k12^2*k21^2*p33*p43 + 4*k12^2*k21*k22*p31*p42 - 4*k12^2*k21*k22*p32*p41 + 4*k12^2*k21*k23*p31*p43 + 4*k12^2*k21*k23*p33*p41 - 2*k12^2*k22^2*p31*p41 - 2*k12^2*k22^2*p32*p42 - 2*k12^2*k22^2*p33*p43 - 4*k12^2*k22*k23*p32*p43 + 4*k12^2*k22*k23*p33*p42 - 2*k12^2*k23^2*p31*p41 + 2*k12^2*k23^2*p32*p42 + 2*k12^2*k23^2*p33*p43 + 4*k12*k13*k21^2*p32*p43 + 4*k12*k13*k21^2*p33*p42 - 8*k12*k13*k21*k22*p33*p41 - 8*k12*k13*k21*k23*p32*p41 + 4*k12*k13*k22^2*p32*p43 - 4*k12*k13*k22^2*p33*p42 - 8*k12*k13*k22*k23*p32*p42 - 8*k12*k13*k22*k23*p33*p43 - 4*k12*k13*k23^2*p32*p43 + 4*k12*k13*k23^2*p33*p42 + 2*k13^2*k21^2*p31*p41 - 2*k13^2*k21^2*p32*p42 + 2*k13^2*k21^2*p33*p43 + 4*k13^2*k21*k22*p31*p42 + 4*k13^2*k21*k22*p32*p41 + 4*k13^2*k21*k23*p31*p43 - 4*k13^2*k21*k23*p33*p41 - 2*k13^2*k22^2*p31*p41 + 2*k13^2*k22^2*p32*p42 + 2*k13^2*k22^2*p33*p43 + 4*k13^2*k22*k23*p32*p43 - 4*k13^2*k22*k23*p33*p42 - 2*k13^2*k23^2*p31*p41 - 2*k13^2*k23^2*p32*p42 - 2*k13^2*k23^2*p33*p43 + p31^2 + p32^2 + p33^2 + p41^2 + p42^2 + p43^2;
    Qa(2) = 4*k11*k21^2*p32*p43 - 4*k11*k21^2*p33*p42 - 4*k12*k21^2*p31*p43 - 4*k12*k21^2*p33*p41 + 4*k13*k21^2*p31*p42 + 4*k13*k21^2*p32*p41 + 4*k11*k22^2*p32*p43 + 4*k11*k22^2*p33*p42 - 4*k12*k22^2*p31*p43 + 4*k12*k22^2*p33*p41 - 4*k13*k22^2*p31*p42 - 4*k13*k22^2*p32*p41 - 4*k11*k23^2*p32*p43 - 4*k11*k23^2*p33*p42 + 4*k12*k23^2*p31*p43 + 4*k12*k23^2*p33*p41 + 4*k13*k23^2*p31*p42 - 4*k13*k23^2*p32*p41 + 8*k11*k21*k22*p33*p41 - 8*k11*k21*k23*p32*p41 + 8*k12*k21*k23*p31*p41 - 8*k13*k21*k22*p31*p41 - 8*k11*k22*k23*p32*p42 - 8*k12*k21*k22*p33*p42 + 8*k12*k22*k23*p31*p42 + 8*k13*k21*k22*p32*p42 + 8*k11*k22*k23*p33*p43 - 8*k12*k21*k23*p33*p43 + 8*k13*k21*k23*p32*p43 - 8*k13*k22*k23*p31*p43;
    Qa(3) = - d2^2 - 2*k11^2*k21^2*p31*p41 + 2*k11^2*k21^2*p32*p42 + 2*k11^2*k21^2*p33*p43 - 4*k11^2*k21*k22*p31*p42 - 4*k11^2*k21*k22*p32*p41 - 4*k11^2*k21*k23*p31*p43 - 4*k11^2*k21*k23*p33*p41 + 2*k11^2*k22^2*p31*p41 - 2*k11^2*k22^2*p32*p42 + 2*k11^2*k22^2*p33*p43 - 4*k11^2*k22*k23*p32*p43 - 4*k11^2*k22*k23*p33*p42 + 2*k11^2*k23^2*p31*p41 + 2*k11^2*k23^2*p32*p42 - 2*k11^2*k23^2*p33*p43 - 2*k12^2*k21^2*p31*p41 + 2*k12^2*k21^2*p32*p42 + 2*k12^2*k21^2*p33*p43 - 4*k12^2*k21*k22*p31*p42 - 4*k12^2*k21*k22*p32*p41 - 4*k12^2*k21*k23*p31*p43 - 4*k12^2*k21*k23*p33*p41 + 2*k12^2*k22^2*p31*p41 - 2*k12^2*k22^2*p32*p42 + 2*k12^2*k22^2*p33*p43 - 4*k12^2*k22*k23*p32*p43 - 4*k12^2*k22*k23*p33*p42 + 2*k12^2*k23^2*p31*p41 + 2*k12^2*k23^2*p32*p42 - 2*k12^2*k23^2*p33*p43 - 2*k13^2*k21^2*p31*p41 + 2*k13^2*k21^2*p32*p42 + 2*k13^2*k21^2*p33*p43 - 4*k13^2*k21*k22*p31*p42 - 4*k13^2*k21*k22*p32*p41 - 4*k13^2*k21*k23*p31*p43 - 4*k13^2*k21*k23*p33*p41 + 2*k13^2*k22^2*p31*p41 - 2*k13^2*k22^2*p32*p42 + 2*k13^2*k22^2*p33*p43 - 4*k13^2*k22*k23*p32*p43 - 4*k13^2*k22*k23*p33*p42 + 2*k13^2*k23^2*p31*p41 + 2*k13^2*k23^2*p32*p42 - 2*k13^2*k23^2*p33*p43 + p31^2 + p32^2 + p33^2 + p41^2 + p42^2 + p43^2;

    Qb(1) = 4*k11^2*k21*p33*p42 - 4*k11^2*k21*p32*p43 - 4*k11^2*k22*p31*p43 - 4*k11^2*k22*p33*p41 + 4*k11^2*k23*p31*p42 + 4*k11^2*k23*p32*p41 + 4*k12^2*k21*p32*p43 + 4*k12^2*k21*p33*p42 + 4*k12^2*k22*p31*p43 - 4*k12^2*k22*p33*p41 - 4*k12^2*k23*p31*p42 - 4*k12^2*k23*p32*p41 - 4*k13^2*k21*p32*p43 - 4*k13^2*k21*p33*p42 + 4*k13^2*k22*p31*p43 + 4*k13^2*k22*p33*p41 - 4*k13^2*k23*p31*p42 + 4*k13^2*k23*p32*p41 + 8*k11*k12*k21*p31*p43 - 8*k11*k12*k23*p31*p41 - 8*k11*k13*k21*p31*p42 + 8*k11*k13*k22*p31*p41 - 8*k11*k12*k22*p32*p43 + 8*k11*k12*k23*p32*p42 - 8*k12*k13*k21*p32*p42 + 8*k12*k13*k22*p32*p41 - 8*k11*k13*k22*p33*p43 + 8*k11*k13*k23*p33*p42 + 8*k12*k13*k21*p33*p43 - 8*k12*k13*k23*p33*p41;
    Qb(2) = 8*k11*k22*p32*p41 - 8*k11*k21*p32*p42 + 8*k12*k21*p31*p42 - 8*k12*k22*p31*p41 - 8*k11*k21*p33*p43 + 8*k11*k23*p33*p41 + 8*k13*k21*p31*p43 - 8*k13*k23*p31*p41 - 8*k12*k22*p33*p43 + 8*k12*k23*p33*p42 + 8*k13*k22*p32*p43 - 8*k13*k23*p32*p42;
    Qb(3) = 4*k11^2*k21*p32*p43 - 4*k11^2*k21*p33*p42 - 4*k11^2*k22*p31*p43 + 4*k11^2*k22*p33*p41 + 4*k11^2*k23*p31*p42 - 4*k11^2*k23*p32*p41 + 4*k12^2*k21*p32*p43 - 4*k12^2*k21*p33*p42 - 4*k12^2*k22*p31*p43 + 4*k12^2*k22*p33*p41 + 4*k12^2*k23*p31*p42 - 4*k12^2*k23*p32*p41 + 4*k13^2*k21*p32*p43 - 4*k13^2*k21*p33*p42 - 4*k13^2*k22*p31*p43 + 4*k13^2*k22*p33*p41 + 4*k13^2*k23*p31*p42 - 4*k13^2*k23*p32*p41;

    Qc(1) = - d2^2 - 2*k11^2*k21^2*p31*p41 + 2*k11^2*k21^2*p32*p42 + 2*k11^2*k21^2*p33*p43 - 2*k11^2*k22^2*p31*p41 + 2*k11^2*k22^2*p32*p42 + 2*k11^2*k22^2*p33*p43 - 2*k11^2*k23^2*p31*p41 + 2*k11^2*k23^2*p32*p42 + 2*k11^2*k23^2*p33*p43 - 4*k11*k12*k21^2*p31*p42 - 4*k11*k12*k21^2*p32*p41 - 4*k11*k12*k22^2*p31*p42 - 4*k11*k12*k22^2*p32*p41 - 4*k11*k12*k23^2*p31*p42 - 4*k11*k12*k23^2*p32*p41 - 4*k11*k13*k21^2*p31*p43 - 4*k11*k13*k21^2*p33*p41 - 4*k11*k13*k22^2*p31*p43 - 4*k11*k13*k22^2*p33*p41 - 4*k11*k13*k23^2*p31*p43 - 4*k11*k13*k23^2*p33*p41 + 2*k12^2*k21^2*p31*p41 - 2*k12^2*k21^2*p32*p42 + 2*k12^2*k21^2*p33*p43 + 2*k12^2*k22^2*p31*p41 - 2*k12^2*k22^2*p32*p42 + 2*k12^2*k22^2*p33*p43 + 2*k12^2*k23^2*p31*p41 - 2*k12^2*k23^2*p32*p42 + 2*k12^2*k23^2*p33*p43 - 4*k12*k13*k21^2*p32*p43 - 4*k12*k13*k21^2*p33*p42 - 4*k12*k13*k22^2*p32*p43 - 4*k12*k13*k22^2*p33*p42 - 4*k12*k13*k23^2*p32*p43 - 4*k12*k13*k23^2*p33*p42 + 2*k13^2*k21^2*p31*p41 + 2*k13^2*k21^2*p32*p42 - 2*k13^2*k21^2*p33*p43 + 2*k13^2*k22^2*p31*p41 + 2*k13^2*k22^2*p32*p42 - 2*k13^2*k22^2*p33*p43 + 2*k13^2*k23^2*p31*p41 + 2*k13^2*k23^2*p32*p42 - 2*k13^2*k23^2*p33*p43 + p31^2 + p32^2 + p33^2 + p41^2 + p42^2 + p43^2;
    Qc(2) = 4*k11*k21^2*p33*p42 - 4*k11*k21^2*p32*p43 + 4*k12*k21^2*p31*p43 - 4*k12*k21^2*p33*p41 - 4*k13*k21^2*p31*p42 + 4*k13*k21^2*p32*p41 - 4*k11*k22^2*p32*p43 + 4*k11*k22^2*p33*p42 + 4*k12*k22^2*p31*p43 - 4*k12*k22^2*p33*p41 - 4*k13*k22^2*p31*p42 + 4*k13*k22^2*p32*p41 - 4*k11*k23^2*p32*p43 + 4*k11*k23^2*p33*p42 + 4*k12*k23^2*p31*p43 - 4*k12*k23^2*p33*p41 - 4*k13*k23^2*p31*p42 + 4*k13*k23^2*p32*p41;
    Qc(3) = - d2^2 - 2*k11^2*k21^2*p31*p41 - 2*k11^2*k21^2*p32*p42 - 2*k11^2*k21^2*p33*p43 - 2*k11^2*k22^2*p31*p41 - 2*k11^2*k22^2*p32*p42 - 2*k11^2*k22^2*p33*p43 - 2*k11^2*k23^2*p31*p41 - 2*k11^2*k23^2*p32*p42 - 2*k11^2*k23^2*p33*p43 - 2*k12^2*k21^2*p31*p41 - 2*k12^2*k21^2*p32*p42 - 2*k12^2*k21^2*p33*p43 - 2*k12^2*k22^2*p31*p41 - 2*k12^2*k22^2*p32*p42 - 2*k12^2*k22^2*p33*p43 - 2*k12^2*k23^2*p31*p41 - 2*k12^2*k23^2*p32*p42 - 2*k12^2*k23^2*p33*p43 - 2*k13^2*k21^2*p31*p41 - 2*k13^2*k21^2*p32*p42 - 2*k13^2*k21^2*p33*p43 - 2*k13^2*k22^2*p31*p41 - 2*k13^2*k22^2*p32*p42 - 2*k13^2*k22^2*p33*p43 - 2*k13^2*k23^2*p31*p41 - 2*k13^2*k23^2*p32*p42 - 2*k13^2*k23^2*p33*p43 + p31^2 + p32^2 + p33^2 + p41^2 + p42^2 + p43^2;


    [x1, x2] = subproblem_8th_order.dual_quadratic(Pa, Pb, Pc, Qa, Qb, Qc);
    
    % Convert back from tan half angle
    theta_1 = 2*atan(x1);
    theta_2 = 2*atan(x2);
end